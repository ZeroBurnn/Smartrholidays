/* script.js */
const questions = [
  {
    question: "–°–∫–æ–ª—å–∫–æ –ª–µ—Ç –≤–∞—à–µ–º—É —Ä–µ–±—ë–Ω–∫—É?",
    options: ["7-9 –ª–µ—Ç", "10-12 –ª–µ—Ç", "13-15 –ª–µ—Ç", "16-17 –ª–µ—Ç"]
  },
  {
    question: "–ë—ã–ª –ª–∏ –æ–ø—ã—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è?",
    options: ["–î–∞", "–ù–µ—Ç"]
  },
  {
    question: "–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ —Ä–µ–±—ë–Ω–æ–∫ –ø—Ä–æ–≤–æ–¥–∏—Ç –≤ –≥–∞–¥–∂–µ—Ç–∞—Ö(—Ç–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä)?",
    options: ["–ú–µ–Ω–µ–µ 1 —á–∞—Å–∞ –≤ –¥–µ–Ω—å", "–æ—Ç 1 –¥–æ 4 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å", "–ë–æ–ª–µ–µ 4 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å"]
  },
  {
    question: "–£–∫–∞–∂–∏—Ç–µ –∏–º—è –∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ IT-–æ–±—É—á–µ–Ω–∏–µ –Ω–∞ 5 –º–µ—Å—è—Ü–µ–≤ –¥–ª—è –≤–∞—à–µ–≥–æ —Ä–µ–±—ë–Ω–∫–∞",
    isLastQuestion: true
  }
];

let currentQuestion = 0;
let answers = [];

const questionElem = document.getElementById("question");
const optionsElem = document.getElementById("options");
const prevBtn = document.getElementById("prevBtn");
const nextBtn = document.getElementById("nextBtn");
const currentStepElem = document.getElementById("currentStep");
const totalStepsElem = document.getElementById("totalSteps");
const resultsContainer = document.createElement('div');
resultsContainer.id = "resultsContainer";
document.body.appendChild(resultsContainer);
resultsContainer.style.display = 'none';

function loadQuestion() {
  const question = questions[currentQuestion];
  questionElem.textContent = question.question;

  optionsElem.innerHTML = "";

  if (question.isLastQuestion) {

    const form = document.createElement("form");
    form.id = "lastQuestionForm";

    const nameLabel = document.createElement("label");
    nameLabel.textContent = "–ò–º—è:";
    const nameInput = document.createElement("input");
    nameInput.type = "text";
    nameInput.name = "name";
    nameInput.required = true;

    const phoneLabel = document.createElement("label");
    phoneLabel.textContent = "–¢–µ–ª–µ—Ñ–æ–Ω (–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –†–æ—Å—Å–∏–π—Å–∫–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞. –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –∂–∏—Ç–µ–ª–µ–π –†–§):";
    const phoneInput = document.createElement("input");
    phoneInput.type = "tel";
    phoneInput.name = "phone";
    phoneInput.pattern = "^((8|\+7)[\- ]?)?(\(?\d{3}\)?[\- ]?)?[\d\- ]{7,10}$";
    phoneInput.required = true;
    phoneInput.title = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ –†–æ—Å—Å–∏–π—Å–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.";

    const emailLabel = document.createElement("label");
    emailLabel.textContent = "–ü–æ—á—Ç–∞:";
    const emailInput = document.createElement("input");
    emailInput.type = "email";
    emailInput.name = "email";
    emailInput.required = true;

    const consentLabel = document.createElement("label");
    const consentCheckbox = document.createElement("input");
    consentCheckbox.type = "checkbox";
    consentCheckbox.name = "consent";
    consentCheckbox.required = true;
    consentLabel.innerHTML = '–Ø –¥–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å <a href="#">–ø–æ–ª–∏—Ç–∏–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</a>';
    consentLabel.prepend(consentCheckbox);

    const termsLabel = document.createElement("label");
    const termsCheckbox = document.createElement("input");
    termsCheckbox.type = "checkbox";
    termsCheckbox.name = "terms";
    termsCheckbox.required = true;
    termsLabel.innerHTML = '–Ø –ø—Ä–∏–Ω–∏–º–∞—é —É—Å–ª–æ–≤–∏—è <a href="#">–¥–æ–≥–æ–≤–æ—Ä–∞ –æ—Ñ–µ—Ä—Ç—ã</a>';
    termsLabel.prepend(termsCheckbox);

    form.appendChild(nameLabel);
    form.appendChild(nameInput);
    form.appendChild(phoneLabel);
    form.appendChild(phoneInput);
    form.appendChild(emailLabel);
    form.appendChild(emailInput);
    form.appendChild(consentLabel);
    form.appendChild(termsLabel);

    optionsElem.appendChild(form);
  } else {
    question.options.forEach(option => {
      const label = document.createElement("label");
      label.textContent = option;

      const input = document.createElement("input");
      input.type = "radio";
      input.name = "answer";
      input.value = option;
      if (answers[currentQuestion] === option) {
        input.checked = true;
        label.classList.add("selected");
      }

      input.addEventListener("change", () => {
        const allLabels = optionsElem.querySelectorAll("label");
        allLabels.forEach(lbl => lbl.classList.remove("selected"));
        label.classList.add("selected");
      });

      label.prepend(input);
      optionsElem.appendChild(label);
    });
  }

  currentStepElem.textContent = currentQuestion + 1;
  totalStepsElem.textContent = questions.length;

  prevBtn.disabled = currentQuestion === 0;
  nextBtn.textContent = question.isLastQuestion ? "–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –º–µ—Å—Ç–æ" : "–î–∞–ª–µ–µ";
}

function nextQuestion() {
  if (questions[currentQuestion].isLastQuestion) {
    // –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ä–º—É
    const form = document.getElementById("lastQuestionForm");

    // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã
    const nameInput = form.querySelector('input[name="name"]');
const phoneInput = form.querySelector('input[name="phone"]');
const emailInput = form.querySelector('input[name="email"]');
const consentCheckbox = form.querySelector('input[name="consent"]');
const termsCheckbox = form.querySelector('input[name="terms"]');


    // –°–ø–∏—Å–æ–∫ –æ—à–∏–±–æ–∫
    const errors = [];

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–µ–Ω–∏
    if (!nameInput.value.trim()) {
      errors.push("–ò–º—è");
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    if (!phoneInput.value.trim() || !/^((8|\+7)[\- ]?)?(\(?\d{3}\)?[\- ]?)?[\d\- ]{7,10}$/.test(phoneInput.value)) {
      errors.push("–¢–µ–ª–µ—Ñ–æ–Ω");
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—á—Ç—ã
    if (!emailInput.value.trim() || !/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(emailInput.value)) {
      errors.push("–ü–æ—á—Ç–∞");
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≥–ª–∞—Å–∏—è
    if (!consentCheckbox.checked) {
      errors.push("–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö");
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
    if (!termsCheckbox.checked) {
      errors.push("–ü—Ä–∏–Ω—è—Ç–∏–µ —É—Å–ª–æ–≤–∏–π –¥–æ–≥–æ–≤–æ—Ä–∞ –æ—Ñ–µ—Ä—Ç—ã");
    }

    // –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏
    if (errors.length > 0) {
      alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ–ª—è:\n" + errors.join(", "));
      return;
    }

    // –ï—Å–ª–∏ –≤—Å–µ —Ö–æ—Ä–æ—à–æ
const name = nameInput.value;
const phone = phoneInput.value;
const email = emailInput.value;

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
answers[currentQuestion] = {
  name: name,
  phone: phone,
  email: email
};

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
submitQuiz(name, phone, email);


  } else {
    const selectedOption = document.querySelector(`input[name="answer"]:checked`);
    if (!selectedOption) {
      alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–≤–µ—Ç.");
      return;
    }

    answers[currentQuestion] = selectedOption.value;

    if (currentQuestion < questions.length - 1) {
      currentQuestion++;
      loadQuestion();
    } else {
      displayResults();
    }
  }
}

function prevQuestion() {
  if (currentQuestion > 0) {
    currentQuestion--;
    loadQuestion();
  }
}

function displayResults() {
  document.querySelector('.quiz-wrapper').style.display = 'none';
  resultsContainer.innerHTML = "<h2>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã:</h2>";
  for (let i = 0; i < questions.length; i++) {
    const question = questions[i];
    let answer;
    if (question.isLastQuestion) {
      // –í—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã
      const form = document.getElementById("lastQuestionForm");
      if (form) {
        answer = `
          –ò–º—è: ${form.name.value || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"},
          –¢–µ–ª–µ—Ñ–æ–Ω: ${form.phone.value || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"},
          Email: ${form.email.value || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
        `;
      } else {
        answer = "–§–æ—Ä–º–∞ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞";
      }
    } else {
      answer = answers[i] || "–ù–µ –æ—Ç–≤–µ—á–µ–Ω–æ";
    }

    const resultItem = document.createElement('p');
    resultItem.innerHTML = `<strong>${question.question}</strong>: ${answer}`;
    resultsContainer.appendChild(resultItem);
  }
  resultsContainer.style.display = 'block';
}

nextBtn.addEventListener("click", nextQuestion);
prevBtn.addEventListener("click", prevQuestion);


function submitQuiz(name, phone, email) {
  const formattedAnswers = [];

  for (let i = 0; i < questions.length - 1; i++) {
    formattedAnswers.push({
      question: questions[i].question,
      answer: answers[i] || "–ù–µ –æ—Ç–≤–µ—á–µ–Ω–æ"
    });
  }

  const payload = {
    name: name,
    phone: phone,
    email: email,
    answers: formattedAnswers
  };

  fetch("http://localhost:5000/submit_quiz", {
    method: "POST",
    headers: {
      "Content-Type": "application/json"
    },
    body: JSON.stringify(payload)
  })
  .then(res => res.json())
  .then(data => {
    document.querySelector('.quiz-wrapper').style.display = 'none';
    showModal(); // üëà –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É
  })
  .catch(err => {
    console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:", err);
    alert("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
  });
}

document.getElementById('closeResultsButton').addEventListener('click', () => {
  window.location.href = '/futurecode';  // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É futurecode.html
});


function showModal() {
  document.getElementById("successModal").style.display = "flex";
}

function closeModal() {
  document.getElementById("successModal").style.display = "none";
}


loadQuestion();